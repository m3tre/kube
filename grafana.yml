---
apiVersion: v1
kind: Namespace
metadata:
  name: my-grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: my-grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:10.4.5
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
#            - name: GF_DATABASE_TYPE
#              value: postgres
#            - name: GF_DATABASE_HOST
#              value: postgres:5432
#            - name: GF_DATABASE_NAME
#              value: grafanadb
#            - name: GF_DATABASE_USER
#              value: postgres
#            - name: GF_DATABASE_PASSWORD
#              value: postgres
#            - name: GF_DATABASE_SSL_MODE
#              value: disable
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          resources:
            requests:
              memory: 750Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
      volumes:
        - name: grafana-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: my-grafana
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http-grafana
      nodePort: 32000

